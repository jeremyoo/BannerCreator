{"version":3,"sources":["hooks/useOnClickOutside.js","static/video/exampleVideo1.mp4","static/video/exampleVideo2.mp4","components/menu.js","components/nav.js","styles/GlobalStyle.js","styles/mixins.js","styles/theme.js","components/layout.js","actions/inputActions.js","components/addBtn.js","components/sizeInput.js","containers/SizeInputContainer.js","components/textInput.js","containers/TextInputContainer.js","utils/fontUtils.js","components/fontInput.js","containers/FontInputContainer.js","actions/paletteActions.js","components/myColorPalette.js","components/paletteIcon.js","containers/PaletteIconContainer.js","components/downloadBtn.js","components/resetBtn.js","components/canvas.js","utils/canvasUtils.js","utils/addTextUtils.js","containers/CanvasContainer.js","App.js","reducers/inputReducer.js","reducers/paletteReducer.js","reducers/index.js","index.js"],"names":["useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","MenuBlock","styled","div","props","menuOpen","css","MenuContentBlock","theme","mixins","flexCenter","AboutBlock","openAbout","InstructionBlock","openIntro","methodSwitch","ContactBlock","openContact","CloseButtonBlock","btnClose","CloseButton","Menu","menuRef","menuTarget","onClickClose","useState","setOpenAbout","setOpenIntro","setOpenContact","setMethodSwitch","setTimeout","onClickContent","e","className","onClickMethod","onClick","controls","autoplay","muted","src","exampleVideo1","exampleVideo2","href","size","StyledNavBlock","header","flexBetween","StyledNav","nav","StyledLinks","MenuButton","btnOpen","Hamburger","Nav","setMenuOpen","setBtnOpen","setBtnClose","setMenuTarget","onClickMenu","window","body","style","position","useRef","GlobalStyle","createGlobalStyle","epicSides","StyledContent","Layout","children","id","CHANGE_INPUT","INITIALIZE_TEXT","RESET_INPUT","changeInput","createAction","key","value","initializeText","AddBtnBlock","AddBtn","StyledBlock","SizeInput","onChangeField","width","height","deviceWidth","setDeviceWidth","valueChange","setValueChange","currentWidth","innerWidth","onChange","name","type","max","placeholder","for","SizeInputContainer","dispatch","useDispatch","useSelector","inputReducer","canvasWidth","canvasHeight","useCallback","payload","TextInput","inputRef","textAlign","autocomplete","TextInputContainer","fontSize","fontStyle","Select","SelectTrigger","open","Options","Option","span","Arrow","FontInput","openSize","setOpenSize","openStyle","setOpenStyle","sizeValue","setSizeValue","styleValue","setStyleValue","onClickSizeValue","dataset","onClickStyleValue","SizeRef","StyleRef","map","data-value","data-type","FontInputContainer","CHANGE_COLOR","CHANGE_TYPE","RESET_COLOR","changeColor","hexColor","changeType","tinycolor","require","Saturation","Hue","PickerBlock","CustomSlider","StyledCustomSlider","CustomPointer","StyledCustomPointer","CustomPicker","hsl","hsv","select","color","toHex","blockRef","preventDefault","pointer","direction","PaletteIconBlock","IconBlock","buttons","button","BackButton","TextButton","palette","SelectedBackIcon","IoColorFill","UnselectedBackIcon","IoColorFillOutline","SelectedTextIcon","IoText","UnelectedTextIcon","BackPalette","TextPalette","PaletteIcon","backgroundHex","textHex","onClickType","paletteBg","setPaletteBg","paletteText","setPaletteText","bgRef","textRef","borderColor","PaletteIconContainer","paletteReducer","background","hex","text","DownloadBtnBlock","undefined","textElement","DownloadButton","parseInt","ResetBtnBlock","ResetButton","CanvasBlock","Canvas","initialize","setTextElement","canvasRef","canvas","ctx","getContext","fillStyle","fillRect","textCtx","textBaseline","font","fillText","length","forEach","textHeight","textStyle","textX","textY","canvasInitiate","xx","offsetX","yy","offsetY","noDrag","reDraw","element","isDrag","push","xClick","yClick","nd","canvasMousemove","overlap","x","y","xw","textWidth","yh","canvasMousedown","canvasMouseup","touches","pageX","pageY","offsetTop","canvasTouchmove","canvasTouchstart","changedTouches","canvasTouchend","class","location","reload","dataURL","toDataURL","replace","aTag","createElement","download","click","input","measureText","Math","floor","concat","Number","addText","CanvasContainer","StyledMainContainer","main","StyledSectionContainer","section","App","buttonRef","scrollRef","handleActions","state","produce","draft","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.edc8e018.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\n// https://usehooks.com/useOnClickOutside/\r\n\r\nconst useOnClickOutside = (ref, handler) => {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener('mousedown', listener);\r\n      document.addEventListener('touchstart', listener);\r\n\r\n      return () => {\r\n        document.removeEventListener('mousedown', listener);\r\n        document.removeEventListener('touchstart', listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler],\r\n  );\r\n};\r\n\r\nexport default useOnClickOutside;\r\n","export default __webpack_public_path__ + \"static/media/exampleVideo1.03f12c0c.mp4\";","export default __webpack_public_path__ + \"static/media/exampleVideo2.df15ca3d.mp4\";","import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { SiGithub, SiGmail } from \"react-icons/si\";\r\nimport exampleVideo1 from '../static/video/exampleVideo1.mp4'\r\nimport exampleVideo2 from '../static/video/exampleVideo2.mp4'\r\n\r\nconst MenuBlock = styled.div`\r\n    position: fixed;\r\n    right: 0;\r\n    width: 45%;\r\n    height: 100vh;\r\n    max-width: 600px;\r\n    z-index: 100;\r\n    background: rgba(2, 12, 27, 0.98);\r\n    font-size: var(--ft-sm-heading);\r\n    color: var(--white);\r\n    transition: var(--transition);\r\n    @media (max-width: 1080px) {\r\n        width: 60%;\r\n    };\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n    };\r\n    @media (max-width: 414px) {\r\n        width: 100%;\r\n    };\r\n    overflow-x: hidden;\r\n    ${props => !props.menuOpen && css`\r\n        transform: translateX(100%);\r\n        pointer-events: none;\r\n    `}\r\n`;\r\nconst MenuContentBlock = styled.div`\r\n    ${({theme}) => theme.mixins.flexCenter};\r\n    flex-direction: column;\r\n    position: relative;\r\n    pointer-events: all;\r\n    margin: 60px 20px;\r\n    span {\r\n        cursor: pointer;\r\n        text-transform: uppercase;\r\n    }\r\n    @media (max-width: 768px) {\r\n        margin: 40px 25px 0;\r\n    }\r\n    @media (max-width: 414px) {\r\n        margin: 25px 30px 0;\r\n    }\r\n`;\r\nconst AboutBlock = styled.div`\r\n    width: 90%;\r\n    margin: 10px 0;\r\n    .aboutContent {\r\n        margin: 15px 5px;\r\n        font-size: var(--ft-md);\r\n    }\r\n    div {\r\n        color: var(--white);\r\n        transform: translateY(5%);\r\n    }\r\n    ${props => props.openAbout ? css`\r\n        span {\r\n            color: var(--teal);\r\n            text-shadow: var(--lightestest-navy) 2.5px 2.5px;\r\n        }\r\n        div {\r\n            transition: var(--transition);\r\n            transform: translateY(0);\r\n            position: relative;\r\n            opacity: 1;\r\n            visibility: visible;\r\n            pointer-events: all;\r\n        }`: css`\r\n        span {\r\n            &:hover {\r\n                color: var(--bright-white);\r\n                text-shadow: var(--lightestest-navy) 2.5px 2.5px;\r\n            }\r\n        }\r\n        div {\r\n            position: fixed;\r\n            top: -50%;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            pointer-events: none;\r\n        }\r\n    `}\r\n`;\r\nconst InstructionBlock = styled.div`\r\n    width: 90%;\r\n    margin: 10px 0;\r\n    @media (max-width: 414px) {\r\n        margin: 0;\r\n    }\r\n    .instructionContent {\r\n        margin: 10px 5px;\r\n        font-size: var(--ft-md);\r\n        color: var(--white);\r\n        .methods {\r\n            color: var(--lightestest-navy);\r\n            font-size: var(--ft-xl);\r\n            margin-top: 10px;\r\n            span {\r\n                text-transform: none;\r\n                padding: 0 10px;\r\n                &::before {\r\n                    font-size: calc(var(--ft-md)*0.98);\r\n                    line-height: 5px;\r\n                }\r\n                :nth-child(1) { &::before { content: \"1. \"}}\r\n                :nth-child(2) { &::before { content: \"2. \"}}\r\n            }\r\n        }\r\n        .explanation {\r\n            padding: 7.5px 0;\r\n            font-size: var(--ft-sm);\r\n        }\r\n        .videos {\r\n            margin: 10px 0;\r\n        }\r\n        video {\r\n            background: var(--light-navy);\r\n            width: 400px;\r\n            @media (max-width: 768px) {\r\n                width: 350px;\r\n            }\r\n            @media (max-width: 414px) {\r\n                width: 275px;\r\n            }\r\n        }\r\n    }\r\n    .instructionContent {\r\n        transform: translateY(5%);\r\n    }\r\n    ${props => props.openIntro ? css`\r\n        .instructions {\r\n                color: var(--teal);\r\n                text-shadow: var(--lightestest-navy) 2.5px 2.5px;\r\n            }\r\n        .instructionContent {\r\n                transition: var(--transition);\r\n                transform: translateY(0);\r\n                position: relative;\r\n                opacity: 1;\r\n                visibility: visible;\r\n                pointer-events: all;\r\n            }`: css`\r\n        .instructions {\r\n            &:hover {\r\n                color: var(--bright-white);\r\n                text-shadow: var(--lightestest-navy) 2.5px 2.5px;\r\n            }\r\n        }\r\n        .instructionContent {\r\n            position: fixed;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            pointer-events: none;\r\n        }`\r\n    }\r\n    ${props => props.methodSwitch === \"create\" ? css`\r\n        .create {\r\n            color: var(--teal);\r\n            text-shadow: var(--lightestest-navy) 2px 2px;\r\n        }\r\n        .layout {\r\n            &:hover,\r\n            &:focus,\r\n            &:active {\r\n                color: var(--white);\r\n                text-shadow: var(--lightestest-navy) 2px 2px;\r\n            }\r\n        }\r\n        .swtichC {\r\n            transition: var(--transition);\r\n            position: relative;\r\n            opacity: 1;\r\n            visibility: visible;\r\n            pointer-events: all;\r\n        }`: css`\r\n        .swtichC {\r\n            position: fixed;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            pointer-events: none;\r\n        }`\r\n    }\r\n    ${props => props.methodSwitch === \"layout\" ? css`\r\n        .layout {\r\n            color: var(--teal);\r\n            text-shadow: var(--lightestest-navy) 2px 2px;\r\n        }\r\n        .create {\r\n            &:hover,\r\n            &:focus,\r\n            &:active {\r\n                color: var(--white);\r\n                text-shadow: var(--lightestest-navy) 2px 2px;\r\n            }\r\n        }\r\n        .swtichL {\r\n            transition: var(--transition);\r\n            position: relative;\r\n            opacity: 1;\r\n            visibility: visible;\r\n            pointer-events: all;\r\n        }`: css`\r\n        .swtichL {\r\n            position: fixed;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            pointer-events: none;\r\n        }`\r\n    }\r\n`;\r\nconst ContactBlock = styled.div`\r\n    width: 90%;\r\n    margin: 10px 0;\r\n    .contactContent {\r\n        margin: 10px 5px;\r\n        font-size: var(--ft-md);\r\n    }\r\n    .contactWord {\r\n        margin: 15px 0;\r\n    }\r\n    .contactIcon {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        margin: 0 10px;\r\n        span {\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n    .githubIcon,\r\n    .gmailLogo {\r\n        &:hover,\r\n        &:focus,\r\n        &:active {\r\n            color: var(--bright-white);\r\n            animation: spin 0.5s;\r\n            animation-timing-function: var(--easing);\r\n        }\r\n    }\r\n    div {\r\n        color: var(--white);\r\n        transform: translateY(5%);\r\n    }\r\n    ${props => props.openContact ? css`\r\n        span {\r\n            color: var(--teal);\r\n            text-shadow: var(--lightestest-navy) 2.5px 2.5px;\r\n        }\r\n        div {\r\n            transition: var(--transition);\r\n            transform: translateY(0);\r\n            position: relative;\r\n            opacity: 1;\r\n            visibility: visible;\r\n            pointer-events: all;\r\n        }`: css`\r\n        span {\r\n            &:hover {\r\n                color: var(--bright-white);\r\n                text-shadow: var(--lightestest-navy) 2.5px 2.5px;\r\n            }\r\n        }\r\n        div {\r\n            position: fixed;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            pointer-events: none;\r\n        }`\r\n    }\r\n`;\r\nconst CloseButtonBlock = styled.div`\r\n    position: fixed;\r\n    z-index: 110;\r\n    transition: var(--transition);\r\n    ${props => !props.btnClose && css`\r\n        display: none;\r\n    `}\r\n    .closeSymbol {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        :before,\r\n        :after {\r\n            position: absolute;\r\n            content: \"\";\r\n            top: 1px;\r\n            right: 18px;\r\n            width: 1px;\r\n            height: 36px;\r\n            background: var(--teal);\r\n            @media (max-width: 414px) {\r\n                top: 0;\r\n                right: 16px;\r\n                height: 34px;\r\n            }\r\n        }\r\n        :before {\r\n            transform: rotate(45deg);\r\n        }\r\n        :after {\r\n            transform: rotate(-45deg);\r\n        }\r\n    }\r\n    @media (min-width: 768px) {\r\n        top: 20px;\r\n        right: 40px;\r\n    }\r\n    @media (max-width: 768px) {\r\n        top: 20px;\r\n        right: 25px;\r\n    }\r\n    @media (max-width: 414px) {\r\n        top: 12.5px;\r\n        right: 15px;\r\n    }\r\n    @media (max-width: 320px) {\r\n        top: 15px;\r\n    }\r\n`;\r\nconst CloseButton = styled.div`\r\n  ${({ theme }) => theme.mixins.flexCenter };\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid var(--teal);\r\n  cursor: pointer;\r\n  transition: var(--transition);\r\n  @media (max-width: 414px) {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n  @media (max-width: 320px) {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n\r\nconst Menu = ({ menuOpen, btnClose, menuRef, menuTarget, onClickClose }) => {\r\n    const [openAbout, setOpenAbout] = useState(false);\r\n    const [openIntro, setOpenIntro] = useState(false);\r\n    const [openContact, setOpenContact] = useState(false);\r\n    const [methodSwitch, setMethodSwitch] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setOpenAbout(false); setOpenIntro(false); setOpenContact(false);\r\n        setTimeout(() => {\r\n            if (menuTarget === \"about\") setOpenAbout(true); \r\n            if (menuTarget === \"instructions\") setOpenIntro(true); setMethodSwitch(\"create\");\r\n            if (menuTarget === \"contact\") setOpenContact(true);\r\n        }, 250)\r\n    }, [menuTarget])\r\n\r\n    const onClickContent = (e) => {\r\n        if (e.target.className === \"about\") {setOpenAbout(!openAbout); setOpenIntro(false); setOpenContact(false);}\r\n        if (e.target.className === \"instructions\") {\r\n            setOpenIntro(!openIntro); setOpenAbout(false); setOpenContact(false); \r\n            if (openIntro) setMethodSwitch(\"\");\r\n            if (!openIntro) setMethodSwitch(\"create\");\r\n        }\r\n        if (e.target.className === \"contact\") {\r\n            setOpenContact(!openContact); setOpenIntro(false); setOpenAbout(false);}\r\n            if (openIntro) setMethodSwitch(\"\");\r\n    }\r\n\r\n    const onClickMethod = (e) => {\r\n        setMethodSwitch(e.target.className);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <MenuBlock menuOpen={menuOpen} ref={menuRef}>\r\n            <MenuContentBlock>\r\n                <AboutBlock menuTarget={menuTarget} openAbout={openAbout}>\r\n                    <span className=\"about\" onClick={onClickContent}>about</span>\r\n                    <div className=\"aboutContent\">\r\n                        Dynamic Banner helps you to create awesome banners quickly and easily. \r\n                        You can adjust the size of the banner, font-size, font-style, background colour, font colour as well as the position of each added text. \r\n                        Playing with different combinations will allow to create a variety of fun designs for your banner. \r\n                        Please check the ‘Instructions’ section to see how!\r\n                    </div>\r\n                </AboutBlock>\r\n                <InstructionBlock menuTarget={menuTarget} openIntro={openIntro} methodSwitch={methodSwitch}>\r\n                    <span className=\"instructions\" onClick={onClickContent}>instructions</span>\r\n                    <div className=\"instructionContent\">\r\n                        <div className=\"methods\">\r\n                            <span className=\"create\" onClick={onClickMethod}>Creating</span>\r\n                            <span className=\"layout\" onClick={onClickMethod}>Positioning</span>\r\n                        </div>\r\n                        <div className=\"explanation\">\r\n                            <div className=\"swtichC\">\r\n                                The following video demonstrates how to start creating your banner. You need to press 'Add Text' button in order to be able to change the position of the banner element.\r\n                            </div>\r\n                            <div className=\"swtichL\">\r\n                                Once you have entered your text, you can change their position. Simply press the ‘Add Text’ button and drag each word to your desired place. Have fun being creative! \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"videos\">\r\n                            <video className=\"swtichC\" controls autoplay muted src={exampleVideo1}/>\r\n                            <video className=\"swtichL\" controls autoplay muted src={exampleVideo2}/>\r\n                        </div>\r\n                    </div>\r\n                </InstructionBlock>\r\n                <ContactBlock menuTarget={menuTarget} openContact={openContact}>\r\n                    <span className=\"contact\" onClick={onClickContent}>contact</span>\r\n                    <div className=\"contactContent\">\r\n                        <div className=\"contactWord\">\r\n                            Please contact me through email or the github link down below for any feature requests, advice, questions or even just to say hi! You are always welcome!\r\n                        </div>\r\n                        <div className=\"contactIcon\">\r\n                            <span>\r\n                                <a href=\"mailto:jyyoo824@gmail.comm\">\r\n                                    <SiGmail className=\"gmailLogo\" size=\"45px\" />\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <a href=\"https://github.com/jeremyoo/BannerCreator\" target=\"blank\">\r\n                                    <SiGithub className=\"githubIcon\" size=\"45px\" />    \r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </ContactBlock>\r\n            </MenuContentBlock>\r\n        </MenuBlock>\r\n        <CloseButtonBlock btnClose={btnClose} onClick={onClickClose}>\r\n            <CloseButton>\r\n                <div className=\"closeSymbol\" />\r\n            </CloseButton>\r\n        </CloseButtonBlock>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Menu;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { FaPaintBrush } from \"react-icons/fa\";\r\nimport { useOnClickOutside } from \"../hooks\"\r\nimport Menu from \"./menu\";\r\n\r\nconst StyledNavBlock = styled.header`\r\n  ${({ theme }) => theme.mixins.flexBetween}\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 11;\r\n  width: 100vw;\r\n  padding: 0px 50px;\r\n  height: 100px;\r\n  background: var(--navy);\r\n\r\n  @media (max-width: 1080px) {\r\n    padding: 0 40px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    padding: 0 25px;\r\n    height: 80px;\r\n  }\r\n  @media (max-width: 414px) {\r\n    padding: 0 15px;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nconst StyledNav = styled.nav`\r\n  ${({ theme }) => theme.mixins.flexBetween};\r\n  position: relative;\r\n  width: 100%;\r\n  color: var(--teal);\r\n  z-index: 12;\r\n  .logo {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    a {\r\n      ${({ theme }) => theme.mixins.flexCenter};\r\n      font-size: var(--ft-heading);\r\n      font-family: BauhausC;\r\n      color: var(--teal);\r\n      span {\r\n        padding: 0 15px;\r\n      }\r\n      &:hover,\r\n      &:focus,\r\n      &:active {\r\n        color: var(--white);\r\n        .brushIcon {\r\n          animation: spin 0.5s;\r\n          animation-timing-function: var(--easing);\r\n        }\r\n        span {\r\n          animation: jump 0.25s;\r\n          animation-timing-function: var(--easing);\r\n        }\r\n        @media (max-width: 414px) {\r\n        span {\r\n          animation: none;\r\n          }\r\n        }\r\n      }\r\n      @media (max-width: 768px) {\r\n        font-size: var(--ft-sm-heading);\r\n        .brushIcon {\r\n          width: 30px;\r\n          height: 30px;\r\n        }\r\n        span {\r\n        padding: 0 10px;\r\n        }\r\n      }\r\n      @media (max-width: 414px) {\r\n        font-size: var(--ft-xxl);\r\n        .brushIcon {\r\n          width: 25px;\r\n          height: 25px;\r\n        }\r\n        span {\r\n        padding: 0 7.5px;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLinks = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n  ul {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    .about {\r\n      width: 50px;\r\n    }\r\n    .instructions {\r\n      width: 104px;\r\n    }\r\n    .contact {\r\n      width: 66px;\r\n    }\r\n    li {\r\n      cursor: pointer;\r\n      font-size: var(--ft-sm);\r\n      text-transform: uppercase;\r\n      margin: 10px 10px;\r\n      &:hover,\r\n      &:focus,\r\n      &:active {\r\n        font-weight: 600;\r\n        color: var(--white);\r\n        animation: jump 0.25s;\r\n        animation-timing-function: var(--easing);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst MenuButton = styled.div`\r\n  ${({ theme }) => theme.mixins.flexCenter };\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid var(--teal);\r\n  cursor: pointer;\r\n  transition: var(--transition);\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n  @media (max-width: 414px) {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n  &:hover,\r\n  &:focus,\r\n  &:active {\r\n    background: var(--teal-tint);\r\n  }\r\n  ${props => props.btnOpen && css`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst Hamburger = styled.div`\r\n  width: 20px;\r\n  height: 2px;\r\n  border-radius: 3px;\r\n  background: var(--teal);\r\n  pointer-events: none;\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 2px;\r\n    border-radius: 3px;\r\n    background: var(--teal);\r\n  }\r\n  &::before {\r\n    transform: translateY(-8px);\r\n    @media (max-width: 414px) {\r\n      transform: translateY(-7px);\r\n    }\r\n    @media (max-width: 320px) {\r\n      transform: translateY(-6px);\r\n    }\r\n  }\r\n  &::after {\r\n    transform: translateY(8px);\r\n    @media (max-width: 414px) {\r\n      transform: translateY(7px);\r\n    }\r\n    @media (max-width: 320px) {\r\n      transform: translateY(6px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [btnOpen, setBtnOpen] = useState(false);\r\n  const [btnClose, setBtnClose] = useState(false);\r\n  const [menuTarget, setMenuTarget] = useState(\"\");\r\n\r\n  const onClickMenu = (e) => {\r\n    setMenuOpen(!menuOpen);\r\n    if (e.target.className) setMenuTarget(e.target.className);\r\n  };\r\n\r\n  const onClickClose = () => {\r\n    setMenuOpen(!menuOpen);\r\n    setMenuTarget(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (menuOpen) setTimeout(() => {setBtnOpen(true);}, 250); \r\n    if (menuOpen) setTimeout(() => {setBtnClose(true);}, 250);\r\n    if (menuOpen) window.document.body.style.position = \"fixed\";\r\n    if (!menuOpen) window.document.body.style.position = \"relative\";\r\n  }, [menuOpen]);\r\n\r\n  const menuRef = useRef();\r\n  useOnClickOutside(menuRef, () => {\r\n    setMenuOpen(false);\r\n    setBtnOpen(false);\r\n    setBtnClose(false);\r\n    setTimeout(() => {setMenuTarget(\"\");}, 250) \r\n  });\r\n\r\n  return (\r\n    <>\r\n      <StyledNavBlock>\r\n        <StyledNav>\r\n          <div className=\"logo\">\r\n            <a href=\"/DynamicBanner\">\r\n              <FaPaintBrush className=\"brushIcon\" size=\"35px\" />\r\n              <span>Dynamic Banner</span>\r\n            </a>\r\n          </div>\r\n          <StyledLinks>\r\n            <ul>\r\n              <li className=\"about\" onClick={onClickMenu} >about</li>\r\n              <li className=\"instructions\" onClick={onClickMenu} >instructions</li>\r\n              <li className=\"contact\" onClick={onClickMenu} >contact</li>\r\n            </ul>\r\n          </StyledLinks>\r\n          <MenuButton btnOpen={btnOpen} onClick={onClickMenu}>\r\n            <Hamburger />\r\n          </MenuButton>\r\n        </StyledNav>\r\n      </StyledNavBlock>\r\n      <Menu\r\n        menuOpen={menuOpen}\r\n        btnOpen={btnOpen}\r\n        btnClose={btnClose}\r\n        menuRef={menuRef}\r\n        menuTarget={menuTarget}\r\n        onClickClose={onClickClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  :root {\r\n    --dark-navy: #020d1f;\r\n    --navy: #0a192f;\r\n    --light-navy: #172a45;\r\n    --lightest-navy: #303C55;\r\n    --lightestest-navy: #56678a;\r\n    --navy-shadow: rgba(2, 12, 27, 0.7);\r\n    --steel: #848ead;\r\n    --light-steel: #a4afce;\r\n    --lightest-steel: #d0dbff;\r\n    --white: #e4f0ff;\r\n    --bright-white: #f7fbff;\r\n    --light-teal: #afffe4;\r\n    --teal: #64FAC8;\r\n    --dark-teal: #14cc8f;\r\n    --darkest-teal: #12a171;\r\n    --teal-tint: rgba(100, 250, 200, 0.1);\r\n    --reddish: #fa6464;\r\n    --dark-reddish: #d65858;\r\n    --darkest-reddish: #aa4545;\r\n    --bluish: #647afa;\r\n    --dark-bluish: #5669d6;\r\n    --darkest-bluish: #4756ad;\r\n\r\n    --ft-xs: 0.75rem;\r\n    --ft-sm: 0.875rem;\r\n    --ft-md: 1rem;\r\n    --ft-lg: 1.125rem;\r\n    --ft-xl: 1.25rem;\r\n    --ft-xxl: 1.5rem;\r\n    --ft-sm-heading: 1.75rem;\r\n    --ft-heading: 2rem;\r\n\r\n    --border-radius: 0.25rem;\r\n\r\n    --easing: cubic-bezier(0.65, 0, 0.35, 1);\r\n    --transition: all 0.25s cubic-bezier(0.65, 0, 0.35, 1);\r\n    --transition-long: all 0.25s cubic-bezier(0.65, 0, 0.35, 1);\r\n\r\n  }\r\n\r\n  @font-face {\r\n    font-family: \"BauhausC\";\r\n    src: url(\"//db.onlinewebfonts.com/t/50a9a6f7cfe8fe4252b7278e8efa2376.eot\");\r\n    src: url(\"//db.onlinewebfonts.com/t/50a9a6f7cfe8fe4252b7278e8efa2376.eot?#iefix\") format(\"embedded-opentype\"),\r\n    url(\"//db.onlinewebfonts.com/t/50a9a6f7cfe8fe4252b7278e8efa2376.woff2\") format(\"woff2\"),\r\n    url(\"//db.onlinewebfonts.com/t/50a9a6f7cfe8fe4252b7278e8efa2376.woff\") format(\"woff\"),\r\n    url(\"//db.onlinewebfonts.com/t/50a9a6f7cfe8fe4252b7278e8efa2376.ttf\") format(\"truetype\"),\r\n    url(\"//db.onlinewebfonts.com/t/50a9a6f7cfe8fe4252b7278e8efa2376.svg#BauhausC\") format(\"svg\");\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    overflow-x: hidden;\r\n    width: 100vw;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  ::selection {\r\n    background-color: var(--steel);\r\n    color: var(--light-steel);\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background-color: var(--navy);\r\n    color: var(--steel);\r\n    font-family: Sans-Serif;\r\n    font-size: var(--ft-xl);\r\n    line-height: 1.3;\r\n\r\n    @media (max-width: 480px) {\r\n      font-size: var(--ft-lg);\r\n    }\r\n  };\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n    display: grid;\r\n    grid-template-rows: 1fr auto;\r\n    grid-template-columns: 100%;\r\n  }\r\n\r\n  main {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-width: 1600px;\r\n    min-height: 100vh;\r\n    padding: 0 150px;\r\n\r\n    @media (max-width: 1080px) {\r\n      padding: 0 100px;\r\n    }\r\n    @media (max-width: 768px) {\r\n      padding: 0px 50px;\r\n    }\r\n    @media (max-width: 480px) {\r\n      padding: 0px 25px;\r\n    }\r\n  }\r\n\r\n  section {\r\n    margin: 0 auto;\r\n    padding: 100px 0 0;\r\n    max-width: 1000px;\r\n    \r\n      @media (max-width: 768px) {\r\n        padding: 80px 0 0;\r\n      }\r\n      @media (max-width: 480px) {\r\n        padding: 60px 0 0;\r\n      }\r\n    }\r\n\r\n  a {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    position: relative;\r\n    transition: var(--transition);\r\n    cursor: pointer;\r\n  }\r\n\r\n  input {\r\n    display: inline-block;\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none; \r\n      margin: 0; \r\n    }\r\n  }\r\n\r\n  select {\r\n    display: inline-block;\r\n    border: 0;\r\n    outline: 0;\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n        transform: rotate(360deg);\r\n    }\r\n    100% {\r\n        transform: rotate(0);\r\n    }\r\n  }\r\n  @keyframes jump {\r\n    0% {\r\n        transform: translateY(0);\r\n    }\r\n    50% {\r\n        transform: translateY(-20%);\r\n    }\r\n    100% {\r\n        transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import { css } from 'styled-components';\r\n\r\nconst mixins = {\r\n    flexCenter: css`\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    `,\r\n    flexBetween: css`\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    `,\r\n    epicSides: css`\r\n        position: relative;\r\n        z-index: 1;\r\n        &:before {\r\n            position: absolute;\r\n            content: \"\";\r\n            display: block;\r\n            top: 0;\r\n            left: -5000px;\r\n            height: 100%;\r\n            width: 10000px;\r\n            z-index: -1;\r\n            @content;\r\n        }\r\n    `,\r\n};\r\n\r\nexport default mixins;","import mixins from './mixins';\r\n\r\nconst theme = {\r\n    mixins,\r\n}\r\n\r\nexport default theme;","import React from \"react\";\r\nimport Nav from \"./nav\"\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle, theme } from \"../styles\";\r\n\r\nconst StyledContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  return(\r\n    <>\r\n      <div id=\"root\">\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <StyledContent>\r\n            <Nav />\r\n            <div id=\"content\">\r\n              {children}\r\n            </div>\r\n          </StyledContent>\r\n        </ThemeProvider>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Layout;\r\n","import { createAction } from 'redux-actions';\r\n\r\n/* action */\r\nexport const CHANGE_INPUT = \"input/CHANGE_INPUT\";\r\nexport const INITIALIZE_TEXT = \"input/INITIALIZE_TEXT\";\r\nexport const RESET_INPUT = \"input/RESET_INPUT\";\r\n\r\n/* action creator */\r\nexport const changeInput = createAction(CHANGE_INPUT, ({ key, value }) => ({\r\n    key,\r\n    value,\r\n}));\r\nexport const initializeText = createAction(INITIALIZE_TEXT);\r\nexport const resetInput = createAction(RESET_INPUT);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddBtnBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  margin: 10px;\r\n\r\n  button {\r\n    position: relative;\r\n    width: 120px;\r\n    height: 90px;\r\n    padding: 10px 15px;\r\n    background: var(--darkest-teal);\r\n    color: var(--bright-white);\r\n    font-size: var(--ft-lg);\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      text-shadow: var(--lightestest-navy) 2px 2px;\r\n      background: var(--teal);\r\n      transition: var(--transition);\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddBtn = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <AddBtnBlock>\r\n        <button onClick={onClick}>ADD<br></br>Text</button>\r\n      </AddBtnBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBlock = styled.div`\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    height: 100px;\r\n    margin-top: 20px;\r\n    background: inherit;\r\n\r\n    span {\r\n        position: relative;\r\n        display: inline-block;\r\n        margin: 30px 10px 30px;\r\n    }\r\n\r\n    input {\r\n        padding: 9px 0 9px 16px;\r\n        width: 180px;\r\n        background: var(--white);\r\n        border-radius: 4px;\r\n        font-size: var(--ft-lg);\r\n        color: var(--light-navy);\r\n        text-shadow: var(--light-steel) 2px 2px;\r\n        font-weight: 600;\r\n        letter-spacing: 4px;\r\n        text-indent: 80px;\r\n        &::-webkit-input-placeholder {\r\n            text-shadow: none;\r\n            letter-spacing: normal;\r\n            color: var(--white);\r\n            text-indent: 5px;\r\n            font-weight: 300;\r\n        }\r\n        + label {\r\n            position: absolute;\r\n            top: 8px;\r\n            left: 0;\r\n            bottom: 8px;\r\n            padding: 5px 15px;\r\n            font-size: 12px;\r\n            font-weight: 700;\r\n            text-transform: uppercase;\r\n            border-radius: 3px;\r\n            transition: var(--transition);\r\n            background: rgba(20, 204, 143, 0);\r\n            &:after {\r\n                position: absolute;\r\n                content: \"\";\r\n                width: 0;\r\n                height: 0;\r\n                top: 100%;\r\n                left: 50%;\r\n                margin-left: -3px;\r\n                border-left: 3px solid transparent;\r\n                border-right: 3px solid transparent;\r\n                border-top: 3px solid rgba(20, 204, 143, 0);\r\n                transition: var(--transition);\r\n            }\r\n        }\r\n        @media (max-width: 414px) {\r\n            width: 160px;\r\n            text-indent: 70px;\r\n        }\r\n        @media (max-width: 320px) {\r\n            width: 140px;\r\n            text-indent: 60px;\r\n        }\r\n    }\r\n    @media (max-width: 414px) {\r\n        height: 90px;\r\n        margin-top: 15px;\r\n    }\r\n    @media (max-width: 320px) {\r\n        height: 85px;\r\n        margin-top: 10px;\r\n    }\r\n    input:focus,\r\n    input:active,\r\n    input:hover {\r\n        color: var(--navy);\r\n        text-indent: 5px;\r\n        background: var(--bright-white);\r\n        &::-webkit-input-placeholder {\r\n            color: var(--light-steel);\r\n        }\r\n        + label {\r\n            color: var(--bright-white);\r\n            background: var(--dark-teal);\r\n            transform: translateY(-40px);\r\n            &:after {\r\n                border-top: 3px solid rgba(20, 204, 143, 1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst SizeInput = ({ onChangeField, width, height }) => {\r\n    const [deviceWidth, setDeviceWidth] = useState(width);\r\n    const [valueChange, setValueChange] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const currentWidth = window.innerWidth;\r\n        setDeviceWidth(currentWidth);\r\n        if (deviceWidth <= width) {\r\n            onChangeField({ key: \"canvasWidth\", value: `${deviceWidth}` });\r\n            onChangeField({ key: \"canvasHeight\", value: `${deviceWidth}`*0.6 });\r\n        };\r\n    }, [width, deviceWidth, onChangeField, ])\r\n\r\n    const onChange = (e) => {\r\n        setValueChange(true);\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        value < deviceWidth ?\r\n        onChangeField({ key: name, value: value }) :\r\n        onChangeField({ key: name, value: deviceWidth });\r\n    };\r\n\r\n    return (\r\n        <StyledBlock>\r\n            <span>\r\n                <input id=\"width\" type=\"number\" value={valueChange ? width : \"\"}  max={deviceWidth} placeholder={width} onChange={onChange} name=\"canvasWidth\"/>\r\n                <label for=\"width\">width</label>\r\n            </span>\r\n            <span>\r\n                <input id=\"height\" type=\"number\" placeholder={height} onChange={onChange} name=\"canvasHeight\"/>\r\n                <label for=\"height\">height</label>\r\n            </span>\r\n        </StyledBlock>\r\n    )\r\n}\r\n\r\nexport default SizeInput;","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeInput } from '../actions/inputActions';\r\nimport SizeInput from '../components/sizeInput';\r\n\r\nconst SizeInputContainer = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { width, height } = useSelector(({ inputReducer }) => ({\r\n        width: inputReducer.canvasWidth,\r\n        height:  inputReducer.canvasHeight,\r\n    }));\r\n\r\n    const onChangeField = useCallback(\r\n        (payload) => dispatch(changeInput(payload)),\r\n        [dispatch]\r\n    );\r\n    \r\n    return (\r\n            <SizeInput onChangeField={onChangeField} width={width} height={height} />\r\n    )\r\n};\r\n\r\nexport default SizeInputContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBlock = styled.div`\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    height: 60px;\r\n    \r\n    span {\r\n        position: relative;\r\n        display: inline-block;\r\n        border-collapse: collapse;\r\n    }\r\n\r\n    input {\r\n        padding: 10px 0;\r\n        width: 380px;\r\n        background: none;\r\n        color: var(--white);\r\n        font-size: var(--ft-xl);       \r\n        &::-webkit-input-placeholder {\r\n            color: var(--steel);\r\n        }\r\n        border-bottom: 2px solid;\r\n        border-bottom-color: var(--steel);\r\n        transition: var(--transition);\r\n        + .underline {\r\n            transition: var(--transition);\r\n        }\r\n    }\r\n    input:focus,\r\n    input:active,\r\n    input:hover {\r\n        border-bottom: 3px solid;\r\n        border-bottom-color: var(--white);\r\n        + .underline {\r\n            padding: 2px 0 2px;\r\n            border-bottom: 3px solid;\r\n            border-bottom-color: var(--dark-teal);\r\n        }\r\n    }\r\n    input:focus,\r\n    input:active {\r\n        &::-webkit-input-placeholder {\r\n            visibility: none;\r\n            opacity: 0;\r\n        }\r\n    }\r\n    input:hover {\r\n        &::-webkit-input-placeholder {\r\n            color: var(--white);\r\n            text-shadow: var(--steel) 1px 1px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TextInput = ({ onChangeField, inputRef }) => {\r\n    const onChange = (e) => {\r\n        onChangeField({ key: e.target.name, value: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <StyledBlock>\r\n            <span>\r\n                <input\r\n                 style={{textAlign: \"center\"}}\r\n                 type=\"text\"\r\n                 placeholder=\"Add text here :)\"\r\n                 onChange={onChange}\r\n                 name=\"text\"\r\n                 ref={inputRef}\r\n                 autocomplete=\"off\" \r\n                />\r\n                <div className=\"underline\" />\r\n            </span>\r\n        </StyledBlock>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeInput } from '../actions/inputActions';\r\nimport TextInput from '../components/textInput';\r\n\r\nconst TextInputContainer = ({ inputRef }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeField = useCallback(\r\n        (payload) => dispatch(changeInput(payload)),\r\n        [dispatch]\r\n    );\r\n    \r\n    return (\r\n        <div>\r\n            <TextInput\r\n                onChangeField={onChangeField}\r\n                inputRef={inputRef}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TextInputContainer;","export const fontSize = [12, 16, 20, 24, 30, 36, 42, 50, 60, 70, 80, 90, 100, 120, 140];\r\nexport const fontStyle = [\r\n  \"Arial\",\r\n  \"Courier\",\r\n  \"Cursive\",\r\n  \"Georgia\",\r\n  \"Helvetica\",\r\n  \"Monospace\",\r\n  \"Normal\",\r\n  \"Verdana\",\r\n];","import React, { useState, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useOnClickOutside } from '../hooks'\r\nimport { fontSize, fontStyle } from '../utils/fontUtils';\r\n\r\nconst StyledBlock = styled.div`\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    flex-direction: column;\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nconst Select = styled.div`\r\n    position: relative;\r\n    margin: 5px 10px;\r\n    width: 180px;\r\n    @media (max-width: 414px) {\r\n        width: 160px;\r\n    }\r\n    @media (max-width: 320px) {\r\n        width: 140px;\r\n    }\r\n`;\r\n\r\nconst SelectTrigger = styled.div`\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    position: relative;\r\n    padding: 12.5px 15px;\r\n    background: var(--white);\r\n    color: var(--steal);\r\n    font-size: var(--ft-sm);\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    width: 100%;\r\n    line-height: 100%;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: var(--transition);\r\n    &:hover {\r\n        cursor: pointer;\r\n        font-size: var(--ft-sm);\r\n        text-shadow: var(--teal) 1px 1px;\r\n        background-color: var(--bright-white);\r\n        @media (max-width: 320px) {\r\n        font-size: var(--ft-xs);\r\n        }\r\n    }\r\n    ${props => props.open && css`\r\n        cursor: pointer;\r\n        text-shadow: var(--teal) 1px 1px;\r\n        background-color: var(--bright-white);\r\n        border-top: 1px;\r\n        border-radius: 0;\r\n        border-bottom-left-radius: 4px;\r\n        border-bottom-right-radius: 4px;\r\n    `}\r\n    @media (max-width: 320px) {\r\n        font-size: var(--ft-xs);\r\n    }\r\n`;\r\n\r\nconst Options = styled.div`\r\n    position: absolute;\r\n    display: block;\r\n    height: 155px;\r\n    bottom: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    overflow: auto;\r\n    overflow-x: hidden;\r\n    ::-webkit-scrollbar {\r\n        background-color: var(--light-steel);\r\n        border-top-right-radius: 4px;\r\n        width: 12px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--lightestest-navy);\r\n        border-radius: 4px;\r\n        border: 1px solid var(--light-navy);\r\n    }\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    transition: var(--transition);\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    pointer-events: none;\r\n    z-index: 10;\r\n    ${props => props.open && css`\r\n        opacity: 1;\r\n        visibility: visible;\r\n        pointer-events: all;\r\n    `}\r\n`;\r\n\r\nconst Option = styled.span`\r\n    display: block;\r\n    position: relative;\r\n    padding: 8px 20px;\r\n    width: 180px;\r\n    background: var(--white);\r\n    color: var(--steal);\r\n    font-size: var(--ft-sm);\r\n    text-transform: uppercase;\r\n    line-height: 100%;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n    border-bottom: 1px solid var(--bright-white);\r\n    &:hover {\r\n        cursor: pointer;\r\n        text-shadow: var(--teal) 1px 1px;\r\n        font-weight: 600;\r\n        background-color: var(--bright-white);\r\n    }\r\n    @media (max-width: 320px) {\r\n        font-size: var(--ft-xs);\r\n    }\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n    position: relative;\r\n    height: 15px;\r\n    width: 15px;\r\n    &::before,\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 0.15rem;\r\n        height: 100%;\r\n        transition: var(--transition);\r\n    }\r\n    &::before {\r\n        left: -5px;\r\n        transform: rotate(45deg);\r\n        background-color: var(--light-navy);\r\n    }\r\n    &::after {\r\n        left: 5px;\r\n        transform: rotate(-45deg);\r\n        background-color: var(--light-navy);\r\n    }\r\n    ${props => props.open && css`\r\n        &::before {\r\n            transform: rotate(-45deg);\r\n        }\r\n        &::after {\r\n            transform: rotate(45deg);\r\n        }\r\n    `}\r\n`;\r\n\r\nconst FontInput = ({ onChangeField }) => {\r\n    const [openSize, setOpenSize] = useState(false);\r\n    const [openStyle, setOpenStyle] = useState(false);\r\n    const [sizeValue, setSizeValue] = useState(\"font-size\");\r\n    const [styleValue, setStyleValue] = useState(\"font-style\");\r\n\r\n    const SizeVisible = () => {\r\n        setOpenSize(!openSize);\r\n    }\r\n    const StyleVisible = () => {\r\n        setOpenStyle(!openStyle);\r\n    }\r\n    const onClickSizeValue = (e) => {\r\n        const type = e.target.dataset.type;\r\n        const value = e.target.dataset.value;\r\n        setSizeValue(value);\r\n        onChangeField({ key: type, value: value });\r\n    }\r\n    const onClickStyleValue = (e) => {\r\n        const type = e.target.dataset.type;\r\n        const value = e.target.dataset.value;\r\n        setStyleValue(value);\r\n        onChangeField({ key: type, value: value });\r\n    }\r\n    const SizeRef = useRef()\r\n    const StyleRef = useRef()\r\n    useOnClickOutside(SizeRef, () => {\r\n        setOpenSize(false);\r\n    });\r\n    useOnClickOutside(StyleRef, () => {\r\n        setOpenStyle(false);\r\n    });\r\n\r\n    return (\r\n        <StyledBlock>\r\n            <Select onClick={SizeVisible} ref={SizeRef}>\r\n                <SelectTrigger open={openSize}><span name=\"fontSize\">{sizeValue}</span>\r\n                    <Arrow open={openSize}></Arrow>\r\n                </SelectTrigger>\r\n                <Options\r\n                    open={openSize}\r\n                >\r\n                    {fontSize.map((size) => <Option data-value={size} data-type=\"fontSize\" onClick={onClickSizeValue}>{size}</Option>)}\r\n                </Options>\r\n            </Select>\r\n            <Select onClick={StyleVisible} ref={StyleRef}>\r\n                <SelectTrigger open={openStyle}><span name=\"fontStyle\">{styleValue}</span>\r\n                    <Arrow open={openStyle}></Arrow>\r\n                </SelectTrigger>\r\n                <Options open={openStyle}>\r\n                    {fontStyle.map((style) => <Option data-value={style} data-type=\"fontStyle\" onClick={onClickStyleValue}>{style}</Option>)}\r\n                </Options>\r\n            </Select>\r\n        </StyledBlock>\r\n    )\r\n}\r\n\r\nexport default FontInput;","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeInput } from '../actions/inputActions';\r\nimport FontInput from '../components/fontInput';\r\n\r\nconst FontInputContainer = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeField = useCallback(\r\n        (payload) => dispatch(changeInput(payload)),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <FontInput\r\n                onChangeField={onChangeField}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FontInputContainer;","import { createAction } from 'redux-actions';\r\n\r\n/* action */\r\nexport const CHANGE_COLOR = \"palette/CHANGE_COLOR\";\r\nexport const CHANGE_TYPE = \"palatte/CHANGE_TYPE\";\r\nexport const RESET_COLOR = \"palette/RESET_COLOR\";\r\n\r\n/* action creator */\r\nexport const changeColor = createAction(CHANGE_COLOR, ({ type, hexColor }) => ({\r\n    type,\r\n    hexColor,\r\n}));\r\nexport const changeType = createAction(CHANGE_TYPE, ({ value }) => ({\r\n    value,\r\n}))\r\nexport const resetColor = createAction(RESET_COLOR)","import React, { useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CustomPicker } from \"react-color\";\r\nconst tinycolor = require(\"tinycolor2\");\r\nconst { Saturation, Hue } = require('react-color/lib/components/common');\r\n\r\nconst PickerBlock = styled.div`\r\n  ${({ theme }) => theme.mixins.flexCenter};\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CustomSlider = () => {return <StyledCustomSlider />}\r\nconst StyledCustomSlider = styled.div`\r\n  margin-top: -1px;\r\n  width: 8px;\r\n  border-radius: 1px;\r\n  height: 17px;\r\n  box-shadow: 0 0 2px rgba(0, 0, 0, .6);\r\n  background: #fff;\r\n  transform: translateX(-2px);\r\n`;\r\nconst CustomPointer = () => {return <StyledCustomPointer />}\r\nconst StyledCustomPointer = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  transform: translate(-9px, -1px);\r\n  background-color: rgb(248, 248, 248);\r\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.37);\r\n`;\r\n\r\nconst MyColorPalette = ({\r\n  hsl,\r\n  hsv,\r\n  onChangeField,\r\n  select,\r\n}) => {\r\n  const onChange = (color) => {\r\n    const hexColor = tinycolor(color).toHex();\r\n    onChangeField({ type: select, hexColor: `#${hexColor}`})\r\n  };\r\n\r\n  // prevent content scrolling while changing color\r\n  const blockRef = useRef();\r\n  useEffect(() => {\r\n    const block = blockRef.current\r\n    block.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    })\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <PickerBlock ref={blockRef}>\r\n      <div style={{ height: 150, width: 200, position: 'relative' }} >\r\n        <Saturation\r\n          hsl={hsl}\r\n          hsv={hsv}\r\n          pointer={CustomPointer}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div style={{ height: 15, width: 200, position: 'relative' }} >\r\n       <Hue\r\n          hsl={hsl}\r\n          pointer={CustomSlider}\r\n          direction={\"horizontal\"}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      </PickerBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomPicker(MyColorPalette);","import React, { useState, useRef } from 'react';\r\nimport MyColorPalette from './myColorPalette';\r\nimport { useOnClickOutside } from '../hooks'\r\nimport styled, { css } from 'styled-components';\r\nimport { IoColorFill, IoColorFillOutline, IoText } from \"react-icons/io5\";\r\n\r\nconst PaletteIconBlock = styled.div`\r\n    ${({theme}) => theme.mixins.flexCenter};\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\nconst IconBlock = styled.div`\r\n    position: relative;\r\n    margin: 40px 10px 15px;\r\n    @media (max-width: 414px) {\r\n        margin: 25px 10px 15px;\r\n    }\r\n    @media (max-width: 320px) {\r\n        margin: 22.5px 10px 15px;\r\n    }\r\n`;\r\n\r\nconst buttons = () => {\r\n    return styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    width: 50px;\r\n    height: 50px;\r\n    padding: 0;\r\n    border: 7px solid;\r\n    border-radius: 4px;\r\n    background: var(--white);\r\n    transition: var(--transition);\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: var(--bright-white);\r\n\r\n    }\r\n    ${props => props.select && css`\r\n        transition: var(--transition);\r\n        color: var(--bright-white);\r\n        background: var(--lightestest-navy);\r\n        transition: var(--transition);\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: var(--lightestest-navy);\r\n        }\r\n    `}\r\n`};\r\nconst BackButton = buttons();\r\nconst TextButton = buttons();\r\n\r\nconst palette = () => {\r\n    return styled.div`\r\n    position: absolute;\r\n    display: block;\r\n    padding: 2px;\r\n    border-radius: 2px;\r\n    background: var(--lightestest-navy);\r\n    bottom: 130%;\r\n    right: -76px;\r\n    transition: var(--transition);\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    pointer-events: none;\r\n    &:after {\r\n        position: absolute;\r\n        content: \"\";\r\n        width: 0;\r\n        height: 0;\r\n        top: 100%;\r\n        left: 50%;\r\n        margin-left: -10px;\r\n        border-left: 10px solid transparent;\r\n        border-right: 10px solid transparent;\r\n        border-top: 10px solid var(--lightestest-navy);\r\n    };\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n    ${props => props.open && css`\r\n        opacity: 1;\r\n        visibility: visible;\r\n        pointer-events: all;`}\r\n`};\r\nconst SelectedBackIcon = styled(IoColorFill)`\r\n    pointer-events: none;\r\n`;\r\nconst UnselectedBackIcon = styled(IoColorFillOutline)`\r\n    pointer-events: none;\r\n`;\r\nconst SelectedTextIcon =  styled(IoText)`\r\n    pointer-events: none;\r\n    color: var(--white);\r\n`;\r\nconst UnelectedTextIcon = styled(IoText)`\r\n    pointer-events: none;\r\n    color: var(--dark-navy);\r\n`; \r\n\r\nconst BackPalette = palette();\r\nconst TextPalette = palette();\r\n\r\nconst PaletteIcon = ({ backgroundHex, textHex, onChangeField, onClickType, select }) => {\r\n    const [paletteBg, setPaletteBg] = useState(false);\r\n    const [paletteText, setPaletteText] = useState(false);\r\n\r\n    const onClickBack = (e) => {\r\n        onClickType({ value: e.target.name });\r\n        setPaletteText(false);\r\n        setPaletteBg(!paletteBg);\r\n    };\r\n    const onClickText = (e) => {\r\n        onClickType({ value: e.target.name });\r\n        setPaletteBg(false);\r\n        setPaletteText(!paletteText);\r\n    };\r\n\r\n    const bgRef = useRef();\r\n    const textRef = useRef();\r\n    useOnClickOutside(bgRef, () => setPaletteBg(false));\r\n    useOnClickOutside(textRef, () => setPaletteText(false));\r\n\r\nreturn (\r\n    <PaletteIconBlock>\r\n        <IconBlock>\r\n            <BackPalette open={paletteBg} ref={bgRef}>\r\n                <MyColorPalette select={select} color={backgroundHex} onChangeField={onChangeField} />\r\n            </BackPalette>\r\n            <BackButton select={select===\"background\" ? 1 : 0} open={paletteBg} onClick={onClickBack} style={{borderColor:`${backgroundHex}`}} name=\"background\">\r\n                { select === \"background\" ?\r\n                <SelectedBackIcon size=\"26\" /> : <UnselectedBackIcon size=\"26\" /> \r\n                }\r\n            </BackButton>\r\n        </IconBlock>\r\n        <IconBlock>\r\n            <TextPalette open={paletteText} ref={textRef}>\r\n                <MyColorPalette select={select} color={textHex} onChangeField={onChangeField} />\r\n            </TextPalette>\r\n            <TextButton select={select===\"text\" ? 1 : 0} open={paletteText} onClick={onClickText} style={{borderColor:`${textHex}`}} name=\"text\">\r\n                { select === \"text\" ? \r\n                <SelectedTextIcon size=\"24\" /> : <UnelectedTextIcon size=\"24\" />\r\n                }\r\n            </TextButton>\r\n        </IconBlock>\r\n    </PaletteIconBlock>\r\n    )\r\n};\r\n\r\nexport default PaletteIcon;","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeColor, changeType } from '../actions/paletteActions'\r\nimport PaletteIcon from '../components/paletteIcon';\r\n\r\nconst PaletteIconContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const { backgroundHex, textHex, select } = useSelector(({ paletteReducer }) => ({\r\n        backgroundHex: paletteReducer.background.hex,\r\n        textHex: paletteReducer.text.hex,\r\n        select: paletteReducer.select,\r\n    }));\r\n\r\n    const onChangeField = useCallback(\r\n        (payload) => dispatch(changeColor(payload)),\r\n        [dispatch]\r\n    );\r\n    const onClickType = useCallback(\r\n        (payload) => dispatch(changeType(payload)),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <PaletteIcon\r\n                backgroundHex={backgroundHex}\r\n                textHex={textHex}\r\n                onChangeField={onChangeField}\r\n                onClickType={onClickType}\r\n                select={select}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaletteIconContainer;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst DownloadBtnBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  transition: var(--transition);\r\n  ${props => props.textElement[0] === undefined ?\r\n  css`visibility: hidden; opacity: 0; position: fixed; transform: translateY(-20px);` :\r\n  css`visibility: visible; opacity: 1; position: relative; transition: var(--transition);`};\r\n\r\n  button {\r\n    position: relative;\r\n    height: 40px;\r\n    padding: 10px 15px;\r\n    background: var(--darkest-bluish);\r\n    color: var(--bright-white);\r\n    font-size: var(--ft-sm);\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    border: 0;\r\n    border-bottom-right-radius: 8px;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      text-shadow: var(--lightestest-navy) 2px 2px;\r\n      background: var(--bluish);\r\n      transition: var(--transition);\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadButton = ({ textElement, canvasWidth, onClick }) => {\r\n  return (\r\n    <>\r\n      <DownloadBtnBlock textElement={textElement}>\r\n        <button style={{width: parseInt(canvasWidth/2)}} onClick={onClick}>DOWNLOAD THIS BANNER</button>\r\n      </DownloadBtnBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ResetBtnBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  transition: var(--transition);\r\n  ${props => props.textElement[0] === undefined ?\r\n  css`visibility: hidden; opacity: 0; position: fixed; transform: translateY(-20px);` :\r\n  css`visibility: visible; opacity: 1; position: relative; transition: var(--transition);`};\r\n\r\n  button {\r\n    position: relative;\r\n    height: 40px;\r\n    padding: 10px 15px;\r\n    background: var(--darkest-reddish);\r\n    color: var(--bright-white);\r\n    font-size: var(--ft-sm);\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    border: 0;\r\n    border-bottom-left-radius: 8px;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      text-shadow: var(--lightestest-navy) 2px 2px;\r\n      background: var(--reddish);\r\n      transition: var(--transition);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ResetButton = ({ textElement, canvasWidth, onClick }) => {\r\n  return (\r\n    <>\r\n      <ResetBtnBlock textElement={textElement}>\r\n        <button style={{width: parseInt(canvasWidth/2)}} onClick={onClick}>RESET BANNER</button>\r\n      </ResetBtnBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetButton;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport AddBtn from \"./addBtn\";\r\nimport { addText } from '../utils/addTextUtils';\r\nimport { canvasInitiate, canvasMousedown, canvasMousemove, canvasMouseup, canvasTouchstart, canvasTouchmove, canvasTouchend } from '../utils/canvasUtils';\r\nimport styled from \"styled-components\";\r\nimport SizeInputContainer from \"../containers/SizeInputContainer\";\r\nimport TextInputContainer from \"../containers/TextInputContainer\";\r\nimport FontInputContainer from \"../containers/FontInputContainer\";\r\nimport PaletteIconContainer from \"../containers/PaletteIconContainer\";\r\nimport DownloadButton from \"./downloadBtn\";\r\nimport ResetButton from \"./resetBtn\";\r\n\r\nconst CanvasBlock = styled.div`\r\n  ${({ theme }) => theme.mixins.flexCenter};\r\n  flex-direction: column;\r\n  margin-bottom: 60px;\r\n\r\n  .font_addbtn_div {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n  }\r\n  .reset_downlaod_div {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n  }\r\n`;\r\n\r\nconst Canvas = ({\r\n  text,\r\n  fontStyle,\r\n  fontSize,\r\n  canvasWidth,\r\n  canvasHeight,\r\n  backgroundHex,\r\n  textHex,\r\n  inputRef,\r\n  initialize,\r\n}) => {\r\n  const [textElement, setTextElement] = useState([]);\r\n  const canvasRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvasInitiate(canvas, backgroundHex, fontSize, fontStyle, textHex, text, canvasWidth, canvasHeight, textElement);\r\n    canvasMousemove(canvas, backgroundHex, fontSize, fontStyle, textHex, text, canvasWidth, canvasHeight, textElement);\r\n    canvasMousedown(canvas, textElement);\r\n    canvasMouseup(canvas, textElement);\r\n    canvasTouchmove(canvas, backgroundHex, fontSize, fontStyle, textHex, text, canvasWidth, canvasHeight, textElement);\r\n    canvasTouchstart(canvas, textElement);\r\n    canvasTouchend(canvas, textElement);\r\n  }, [text, textHex, fontSize, fontStyle, backgroundHex, canvasWidth, canvasHeight, textElement]);\r\n\r\n  const onClickAddText = () => {\r\n    const canvas = canvasRef.current;\r\n    const input = inputRef.current;\r\n    addText(canvas, text, textHex, fontSize, fontStyle, textElement, setTextElement);\r\n    initialize();\r\n    input.value = \"\";\r\n  };\r\n\r\n  const onClickDonwload = () => {\r\n    const canvas = canvasRef.current;\r\n    const dataURL = canvas.toDataURL('image/png');\r\n    dataURL.replace(/^data:image\\/[^;]*/, 'data:application/octet-stream');\r\n    dataURL.replace(/^data:application\\/octet-stream/, 'data:application/octet-stream;headers=Content-Disposition%3A%20attachment%3B%20filename=Canvas.png');\r\n    const aTag = document.createElement('a');\r\n    aTag.download = 'Dynamic_banner.png';\r\n    aTag.href = dataURL;\r\n    aTag.click();\r\n  }\r\n\r\n  const onClickReset = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CanvasBlock>\r\n        <SizeInputContainer />\r\n        <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} />\r\n        <div class=\"reset_downlaod_div\">\r\n          <ResetButton textElement={textElement} canvasWidth={canvasWidth} onClick={onClickReset} />\r\n          <DownloadButton textElement={textElement} canvasWidth={canvasWidth} onClick={onClickDonwload} />\r\n        </div>\r\n        <PaletteIconContainer />\r\n        <TextInputContainer inputRef={inputRef} />\r\n        <div class=\"font_addbtn_div\">\r\n          <FontInputContainer />\r\n          <AddBtn onClick={onClickAddText} />\r\n        </div>\r\n      </CanvasBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n\r\n","export const canvasInitiate = (canvas, backgroundHex, fontSize, fontStyle, textHex, text, canvasWidth, canvasHeight, textElement) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = `${backgroundHex}`\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    const textCtx = canvas.getContext(\"2d\");\r\n    textCtx.textAlign = \"center\";\r\n    textCtx.textBaseline = \"middle\";\r\n    textCtx.font = `${fontSize}px ${fontStyle}`;\r\n    textCtx.fillStyle = `${textHex}`;\r\n    textCtx.fillText(`${text}`, `${canvasWidth / 2}`, `${canvasHeight / 2}`);\r\n    if (textElement[textElement.length - 1]) {\r\n        textCtx.textAlign = \"start\";\r\n        textCtx.textBaseline = \"top\";\r\n        textElement.forEach((text) => {\r\n          textCtx.fillStyle = `${text.color}`;\r\n          textCtx.font = `${text.textHeight}px ${text.textStyle}`;\r\n          textCtx.fillText(`${text.text}`, `${text.textX}`, `${text.textY}`);\r\n        });\r\n      }\r\n    };\r\n\r\nexport const canvasMousedown = (canvas, textElement) => {\r\n  canvas.addEventListener(\"mousedown\", (e) => {\r\n    const xx = e.offsetX;\r\n    const yy = e.offsetY;\r\n    let overlap = 0;\r\n    if (textElement[textElement.length - 1]) {\r\n      textElement.forEach((element) => {\r\n        const xClick = xx - element.textX;\r\n        const yClick = yy - element.textY;\r\n        const x = element.textX;\r\n        const y = element.textY;\r\n        const xw = element.textWidth;\r\n        const yh = element.textHeight;\r\n        if (x < xx && xx < x + xw && y < yy && yy < y + yh) {\r\n          element.xClick = xClick;\r\n          element.yClick = yClick;\r\n          element.isDrag = true;\r\n          overlap++;\r\n        }\r\n      });\r\n      textElement.forEach((element) => {\r\n        if (element.isDrag && overlap !== 1) {\r\n          element.isDrag = false;\r\n          overlap--;\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const canvasMousemove = (canvas, backgroundHex, fontSize, fontStyle, textHex, text, canvasWidth, canvasHeight, textElement) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const textCtx = canvas.getContext(\"2d\");\r\n    canvas.addEventListener(\"mousemove\", (e) => {\r\n          const xx = e.offsetX;\r\n          const yy = e.offsetY;\r\n          let noDrag = [];\r\n          let reDraw = false;\r\n          if (textElement[textElement.length - 1]) {\r\n            textElement.forEach((element) => {\r\n              if (!element.isDrag) {\r\n                noDrag.push(element);\r\n              }\r\n              if (element.isDrag) {\r\n                reDraw = true;\r\n                ctx.fillStyle = `${backgroundHex}`;\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n                textCtx.font = `${element.textHeight}px ${element.textStyle}`;\r\n                textCtx.fillStyle = `${element.color}`;\r\n                textCtx.fillText(\r\n                  `${element.text}`,\r\n                  xx - `${element.xClick}`,\r\n                  yy - `${element.yClick}`\r\n                );\r\n              }\r\n            });\r\n          }\r\n          if (reDraw) {\r\n            noDrag.forEach((nd) => {\r\n              textCtx.font = `${nd.textHeight}px ${nd.textStyle}`;\r\n              textCtx.fillStyle = `${nd.color}`;\r\n              textCtx.fillText(`${nd.text}`, `${nd.textX}`, `${nd.textY}`);\r\n            });\r\n            textCtx.font = `${fontSize}px ${fontStyle}`;\r\n            textCtx.fillStyle = `${textHex}`;\r\n            textCtx.fillText(`${text}`, `${canvasWidth / 2}`, `${canvasHeight / 2}`);\r\n          }\r\n        });\r\n    };\r\n\r\nexport const canvasMouseup = (canvas, textElement) => {\r\n    canvas.addEventListener(\"mouseup\", (e) => {\r\n      const xx = e.offsetX;\r\n      const yy = e.offsetY;\r\n      if (textElement[textElement.length - 1]) {\r\n        textElement.forEach((element) => {\r\n          if (element.isDrag) {\r\n            element.textX = xx - element.xClick;\r\n            element.textY = yy - element.yClick;\r\n            element.isDrag = false;\r\n          }\r\n          element.xClick = 0;\r\n          element.xClick = 0;\r\n        });\r\n      }\r\n    });\r\n}\r\n\r\nexport const canvasTouchstart = (canvas, textElement) => {\r\n  canvas.addEventListener(\"touchstart\", (e) => {\r\n    const xx = e.touches[0].pageX;\r\n    const yy = e.touches[0].pageY - e.target.offsetTop;\r\n    let overlap = 0;\r\n    if (textElement[textElement.length - 1]) {\r\n      textElement.forEach((element) => {\r\n        const xClick = xx - element.textX;\r\n        const yClick = yy - element.textY;\r\n        const x = element.textX;\r\n        const y = element.textY;\r\n        const xw = element.textWidth;\r\n        const yh = element.textHeight;\r\n        if (x < xx && xx < x + xw && y < yy && yy < y + yh) {\r\n          element.xClick = xClick;\r\n          element.yClick = yClick;\r\n          element.isDrag = true;\r\n          overlap++;\r\n        }\r\n      });\r\n      textElement.forEach((element) => {\r\n        if (element.isDrag && overlap !== 1) {\r\n          element.isDrag = false;\r\n          overlap--;\r\n        }\r\n      });\r\n    }\r\n  })\r\n}\r\n\r\nexport const canvasTouchmove = (canvas, backgroundHex, fontSize, fontStyle, textHex, text, canvasWidth, canvasHeight, textElement) => {\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const textCtx = canvas.getContext(\"2d\");\r\n  canvas.addEventListener(\"touchmove\", (e) => {\r\n    e.preventDefault()\r\n    const xx = e.touches[0].pageX;\r\n    const yy = e.touches[0].pageY - e.target.offsetTop;\r\n    let noDrag = [];\r\n    let reDraw = false;\r\n    if (textElement[textElement.length - 1]) {\r\n      textElement.forEach((element) => {\r\n        if (!element.isDrag) {\r\n          noDrag.push(element);\r\n        }\r\n        if (element.isDrag) {\r\n          reDraw = true;\r\n          ctx.fillStyle = `${backgroundHex}`;\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n          textCtx.font = `${element.textHeight}px ${element.textStyle}`;\r\n          textCtx.fillStyle = `${element.color}`;\r\n          textCtx.fillText(\r\n            `${element.text}`,\r\n            xx - `${element.xClick}`,\r\n            yy - `${element.yClick}`\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (reDraw) {\r\n      noDrag.forEach((nd) => {\r\n        textCtx.font = `${nd.textHeight}px ${nd.textStyle}`;\r\n        textCtx.fillStyle = `${nd.color}`;\r\n        textCtx.fillText(`${nd.text}`, `${nd.textX}`, `${nd.textY}`);\r\n      });\r\n      textCtx.font = `${fontSize}px ${fontStyle}`;\r\n      textCtx.fillStyle = `${textHex}`;\r\n      textCtx.fillText(`${text}`, `${canvasWidth / 2}`, `${canvasHeight / 2}`);\r\n    }\r\n  });\r\n}\r\n\r\nexport const canvasTouchend = (canvas, textElement) => {\r\n  canvas.addEventListener(\"touchend\", (e) => {\r\n    const xx = e.changedTouches[0].pageX;\r\n    const yy = e.changedTouches[0].pageY - e.target.offsetTop;;\r\n    if (textElement[textElement.length - 1]) {\r\n      textElement.forEach((element) => {\r\n        if (element.isDrag) {\r\n          element.textX = xx - element.xClick;\r\n          element.textY = yy - element.yClick;\r\n          element.isDrag = false;\r\n        }\r\n        element.xClick = 0;\r\n        element.xClick = 0;\r\n      });\r\n    }\r\n  });\r\n}","export const addText = (canvas, text, textHex, fontSize, fontStyle, textElement, setTextElement) => {\r\n  const textCtx = canvas.getContext(\"2d\");\r\n  textCtx.font = `${fontSize}px ${fontStyle}`;\r\n  const measureText = textCtx.measureText(text);\r\n  const textWidth = Math.floor(measureText.width);\r\n  const textHeight = parseInt(fontSize)\r\n  const x = (canvas.width / 2) - (textWidth / 2);\r\n  const y = (canvas.height / 2) - (textHeight / 2);\r\n\r\n  setTextElement(\r\n    textElement.concat({\r\n      text: text,\r\n      color: textHex,\r\n      textX: x,\r\n      textY: y,\r\n      textWidth: textWidth,\r\n      textHeight: textHeight,\r\n      textStyle: fontStyle,\r\n      xClick: Number,\r\n      yClick: Number,\r\n      isDrag: false,\r\n    })\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { initializeText } from \"../actions/inputActions\";\r\nimport Canvas from \"../components/canvas\";\r\n\r\nconst CanvasContainer = ({ inputRef }) => {\r\n  const {\r\n    text,\r\n    fontStyle,\r\n    fontSize,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    backgroundHex,\r\n    textHex,\r\n  } = useSelector(({ inputReducer, paletteReducer }) => ({\r\n    text: inputReducer.text,\r\n    fontStyle: inputReducer.fontStyle,\r\n    fontSize: inputReducer.fontSize,\r\n    canvasWidth: inputReducer.canvasWidth,\r\n    canvasHeight: inputReducer.canvasHeight,\r\n    backgroundHex: paletteReducer.background.hex,\r\n    textHex: paletteReducer.text.hex,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const initialize = useCallback(() => dispatch(initializeText()), [dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        text={text}\r\n        fontStyle={fontStyle}\r\n        fontSize={fontSize}\r\n        canvasWidth={canvasWidth}\r\n        canvasHeight={canvasHeight}\r\n        backgroundHex={backgroundHex}\r\n        textHex={textHex}\r\n        inputRef={inputRef}\r\n        initialize={initialize}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CanvasContainer;\r\n","import React, { useRef } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Layout from \"./components/layout\";\r\nimport CanvasContainer from \"./containers/CanvasContainer\";\r\n\r\nconst StyledMainContainer = styled.main``;\r\nconst StyledSectionContainer = styled.section`\r\n  ${({ theme }) => theme.mixins.flexCenter};\r\n  flex-direction: column;\r\n`;\r\n\r\nconst App = () => {\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  return (\r\n    <>\r\n    <Layout scrollRef={scrollRef}>\r\n      <StyledMainContainer>\r\n        <StyledSectionContainer ref={scrollRef}>\r\n            <CanvasContainer inputRef={inputRef} buttonRef={buttonRef} />\r\n        </StyledSectionContainer>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { handleActions } from 'redux-actions';\r\nimport { CHANGE_INPUT, INITIALIZE_TEXT, RESET_INPUT} from '../actions/inputActions'\r\n\r\n/* initial state */\r\nconst initialState = {\r\n    text: \"hello :)\",\r\n    fontStyle: \"normal\",\r\n    fontSize: 36,\r\n    canvasWidth: \"600\",\r\n    canvasHeight: \"360\",\r\n};\r\n\r\n/* reducer */\r\nconst inputReducer = handleActions(\r\n    {\r\n        [CHANGE_INPUT]: (state, { payload: { key, value }}) => ({\r\n            ...state,\r\n            [key]: value,\r\n        }),\r\n        [INITIALIZE_TEXT]: (state) => ({\r\n            ...state,\r\n            text: '',\r\n        }),\r\n        [RESET_INPUT]: (state) => ({\r\n            ...state,\r\n            text: \"hello :)\",\r\n            fontStyle: \"normal\",\r\n            fontSize: 36,\r\n            canvasWidth: \"600\",\r\n            canvasHeight: \"360\",\r\n        })\r\n    },\r\n    initialState,\r\n);\r\n\r\n\r\nexport default inputReducer;","import { handleActions } from 'redux-actions';\r\nimport { CHANGE_COLOR, CHANGE_TYPE, RESET_COLOR } from '../actions/paletteActions'\r\nimport produce from 'immer';\r\n\r\n/* initialstate */\r\nconst initialState = {\r\n    background: {\r\n        hex: \"#14cc8f\",\r\n    },\r\n    text: {\r\n        hex: \"#303C55\",\r\n    },\r\n    select: \"\",\r\n}\r\n\r\n\r\n/* reducer */\r\nconst paletteReducer = handleActions(\r\n    {\r\n        [CHANGE_COLOR]: (state, { payload: { type, hexColor } }) => \r\n            produce(state, draft => {\r\n            draft[type][\"hex\"] = hexColor;\r\n        }),\r\n        [CHANGE_TYPE]: (state, {payload: { value } }) => ({\r\n            ...state,\r\n            select: value,\r\n        }),\r\n        [RESET_COLOR]: (state) => ({\r\n            ...state,\r\n            background: {\r\n                hex: \"#14cc8f\",\r\n            },\r\n            text: {\r\n                hex: \"#303C55\",\r\n            },\r\n            select: \"\",\r\n        })\r\n    },\r\n    initialState,\r\n);\r\n\r\n\r\nexport default paletteReducer;","import { combineReducers } from 'redux';\r\nimport inputReducer from './inputReducer'\r\nimport paletteReducer from './paletteReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    inputReducer,\r\n    paletteReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { createStore }  from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n/* store */\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(),\r\n  );\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}